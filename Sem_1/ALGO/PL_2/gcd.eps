%!PS-Adobe-2.0 EPSF-2.0
%%Title: gcd.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Tue Dec 26 11:48:09 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gcd.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (kalinga)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 26 11:48:09 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
670 320 M
63 0 V
6286 0 R
-63 0 V
stroke
610 320 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 1204 M
63 0 V
6286 0 R
-63 0 V
stroke
610 1204 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 50000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 2088 M
63 0 V
6286 0 R
-63 0 V
stroke
610 2088 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 2971 M
63 0 V
6286 0 R
-63 0 V
stroke
610 2971 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 150000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 3855 M
63 0 V
6286 0 R
-63 0 V
stroke
610 3855 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 4739 M
63 0 V
6286 0 R
-63 0 V
stroke
610 4739 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 250000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
670 320 M
0 63 V
0 4356 R
0 -63 V
stroke
670 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1464 320 M
0 63 V
0 4356 R
0 -63 V
stroke
1464 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 200)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2257 320 M
0 63 V
0 4356 R
0 -63 V
stroke
2257 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 400)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3051 320 M
0 63 V
0 4356 R
0 -63 V
stroke
3051 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 600)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3845 320 M
0 63 V
0 4356 R
0 -63 V
stroke
3845 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 800)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4638 320 M
0 63 V
0 4356 R
0 -63 V
stroke
4638 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5432 320 M
0 63 V
0 4356 R
0 -63 V
stroke
5432 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1200)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6225 320 M
0 63 V
0 4356 R
0 -63 V
stroke
6225 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1400)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
7019 320 M
0 63 V
0 4356 R
0 -63 V
stroke
7019 220 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1600)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
670 4739 N
670 320 L
6349 0 V
0 4419 V
-6349 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
80 2529 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Time [ms])]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
3844 70 M
[ [(Helvetica) 100.0 0.0 true true 0 (Bit length of numbers)]
] -33.3 MCshow
LTb
LCb setrgbcolor
3844 4889 M
[ [(Helvetica) 100.0 0.0 true true 0 (GCD)]
] -33.3 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6536 4626 M
[ [(Helvetica) 100.0 0.0 true true 0 (Naive)]
] -33.3 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 6596 4626 M
303 0 V
674 320 M
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 1 V
4 0 V
4 2 V
4 2 V
4 7 V
4 10 V
3 30 V
4 48 V
4 83 V
4 159 V
4 875 V
4 258 V
4 2616 V
674 320 Pls
678 320 Pls
682 320 Pls
686 320 Pls
690 320 Pls
694 320 Pls
698 320 Pls
702 320 Pls
706 320 Pls
710 321 Pls
714 321 Pls
718 323 Pls
722 325 Pls
726 332 Pls
730 342 Pls
733 372 Pls
737 420 Pls
741 503 Pls
745 662 Pls
749 1537 Pls
753 1795 Pls
757 4411 Pls
6747 4626 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
6536 4526 M
[ [(Helvetica) 100.0 0.0 true true 0 (Euclid)]
] -33.3 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 6596 4526 M
303 0 V
733 320 M
64 0 V
63 0 V
64 0 V
63 0 V
64 0 V
63 0 V
64 0 V
63 1 V
64 -1 V
63 1 V
64 0 V
63 0 V
64 0 V
63 0 V
64 1 V
63 0 V
64 0 V
63 0 V
64 1 V
63 0 V
64 1 V
63 0 V
64 0 V
63 1 V
64 0 V
63 1 V
64 0 V
63 1 V
64 0 V
63 1 V
64 0 V
63 1 V
64 1 V
63 0 V
64 1 V
63 1 V
64 0 V
63 1 V
64 2 V
63 0 V
64 2 V
63 0 V
64 2 V
63 0 V
64 4 V
63 0 V
64 0 V
63 1 V
64 2 V
63 4 V
63 -3 V
64 5 V
63 -1 V
64 1 V
63 3 V
64 4 V
63 1 V
64 -2 V
63 4 V
64 -1 V
63 0 V
64 7 V
63 0 V
64 4 V
63 7 V
64 -5 V
63 6 V
64 -3 V
63 4 V
64 2 V
63 3 V
64 3 V
63 5 V
64 2 V
63 2 V
64 3 V
63 -4 V
64 13 V
63 -2 V
64 6 V
63 -2 V
64 3 V
63 2 V
64 4 V
63 12 V
64 4 V
63 -3 V
64 7 V
63 -8 V
64 13 V
63 -2 V
64 11 V
63 1 V
64 2 V
63 9 V
64 5 V
63 4 V
64 6 V
63 -8 V
733 320 Crs
797 320 Crs
860 320 Crs
924 320 Crs
987 320 Crs
1051 320 Crs
1114 320 Crs
1178 320 Crs
1241 321 Crs
1305 320 Crs
1368 321 Crs
1432 321 Crs
1495 321 Crs
1559 321 Crs
1622 321 Crs
1686 322 Crs
1749 322 Crs
1813 322 Crs
1876 322 Crs
1940 323 Crs
2003 323 Crs
2067 324 Crs
2130 324 Crs
2194 324 Crs
2257 325 Crs
2321 325 Crs
2384 326 Crs
2448 326 Crs
2511 327 Crs
2575 327 Crs
2638 328 Crs
2702 328 Crs
2765 329 Crs
2829 330 Crs
2892 330 Crs
2956 331 Crs
3019 332 Crs
3083 332 Crs
3146 333 Crs
3210 335 Crs
3273 335 Crs
3337 337 Crs
3400 337 Crs
3464 339 Crs
3527 339 Crs
3591 343 Crs
3654 343 Crs
3718 343 Crs
3781 344 Crs
3845 346 Crs
3908 350 Crs
3971 347 Crs
4035 352 Crs
4098 351 Crs
4162 352 Crs
4225 355 Crs
4289 359 Crs
4352 360 Crs
4416 358 Crs
4479 362 Crs
4543 361 Crs
4606 361 Crs
4670 368 Crs
4733 368 Crs
4797 372 Crs
4860 379 Crs
4924 374 Crs
4987 380 Crs
5051 377 Crs
5114 381 Crs
5178 383 Crs
5241 386 Crs
5305 389 Crs
5368 394 Crs
5432 396 Crs
5495 398 Crs
5559 401 Crs
5622 397 Crs
5686 410 Crs
5749 408 Crs
5813 414 Crs
5876 412 Crs
5940 415 Crs
6003 417 Crs
6067 421 Crs
6130 433 Crs
6194 437 Crs
6257 434 Crs
6321 441 Crs
6384 433 Crs
6448 446 Crs
6511 444 Crs
6575 455 Crs
6638 456 Crs
6702 458 Crs
6765 467 Crs
6829 472 Crs
6892 476 Crs
6956 482 Crs
7019 474 Crs
6747 4526 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
6536 4426 M
[ [(Helvetica) 100.0 0.0 true true 0 (Extended Euclid)]
] -33.3 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 6596 4426 M
303 0 V
733 320 M
64 0 V
63 0 V
64 0 V
63 0 V
64 0 V
63 1 V
64 0 V
63 0 V
64 0 V
63 0 V
64 1 V
63 1 V
64 -1 V
63 2 V
64 -1 V
63 1 V
64 1 V
63 1 V
64 1 V
63 0 V
64 1 V
63 0 V
64 2 V
63 0 V
64 3 V
63 2 V
64 -1 V
63 4 V
64 0 V
63 1 V
64 0 V
63 2 V
64 3 V
63 -1 V
64 4 V
63 2 V
64 2 V
63 2 V
64 1 V
63 2 V
64 3 V
63 0 V
64 5 V
63 4 V
64 1 V
63 1 V
64 5 V
63 4 V
64 4 V
63 2 V
63 8 V
64 -1 V
63 2 V
64 11 V
63 3 V
64 0 V
63 2 V
64 4 V
63 1 V
64 12 V
63 2 V
64 4 V
63 -4 V
64 11 V
63 7 V
64 3 V
63 14 V
64 -5 V
63 18 V
64 8 V
63 -5 V
64 -6 V
63 17 V
64 26 V
63 -2 V
64 15 V
63 -9 V
64 25 V
63 1 V
64 2 V
63 2 V
64 25 V
63 -5 V
64 6 V
63 3 V
64 3 V
63 12 V
64 11 V
63 21 V
64 20 V
63 -8 V
64 -11 V
63 30 V
64 23 V
63 13 V
64 -2 V
63 11 V
64 28 V
63 21 V
733 320 Star
797 320 Star
860 320 Star
924 320 Star
987 320 Star
1051 320 Star
1114 321 Star
1178 321 Star
1241 321 Star
1305 321 Star
1368 321 Star
1432 322 Star
1495 323 Star
1559 322 Star
1622 324 Star
1686 323 Star
1749 324 Star
1813 325 Star
1876 326 Star
1940 327 Star
2003 327 Star
2067 328 Star
2130 328 Star
2194 330 Star
2257 330 Star
2321 333 Star
2384 335 Star
2448 334 Star
2511 338 Star
2575 338 Star
2638 339 Star
2702 339 Star
2765 341 Star
2829 344 Star
2892 343 Star
2956 347 Star
3019 349 Star
3083 351 Star
3146 353 Star
3210 354 Star
3273 356 Star
3337 359 Star
3400 359 Star
3464 364 Star
3527 368 Star
3591 369 Star
3654 370 Star
3718 375 Star
3781 379 Star
3845 383 Star
3908 385 Star
3971 393 Star
4035 392 Star
4098 394 Star
4162 405 Star
4225 408 Star
4289 408 Star
4352 410 Star
4416 414 Star
4479 415 Star
4543 427 Star
4606 429 Star
4670 433 Star
4733 429 Star
4797 440 Star
4860 447 Star
4924 450 Star
4987 464 Star
5051 459 Star
5114 477 Star
5178 485 Star
5241 480 Star
5305 474 Star
5368 491 Star
5432 517 Star
5495 515 Star
5559 530 Star
5622 521 Star
5686 546 Star
5749 547 Star
5813 549 Star
5876 551 Star
5940 576 Star
6003 571 Star
6067 577 Star
6130 580 Star
6194 583 Star
6257 595 Star
6321 606 Star
6384 627 Star
6448 647 Star
6511 639 Star
6575 628 Star
6638 658 Star
6702 681 Star
6765 694 Star
6829 692 Star
6892 703 Star
6956 731 Star
7019 752 Star
6747 4426 Star
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
670 4739 N
670 320 L
6349 0 V
0 4419 V
-6349 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
